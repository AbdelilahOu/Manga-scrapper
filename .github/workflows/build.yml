on:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Latest Release

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: "ubuntu-latest"
    needs: test
    strategy:
      matrix:
        goosarch:
          - "aix/ppc64"
          - "darwin/amd64"
          - "darwin/arm64"
          - "linux/386"
          - "linux/amd64"
          - "linux/arm"
          - "linux/arm64"
          - "linux/mips"
          - "linux/mips64"
          - "linux/mips64le"
          - "linux/mipsle"
          - "linux/ppc64"
          - "linux/ppc64le"
          - "linux/riscv64"
          - "linux/s390x"
          - "windows/386"
          - "windows/amd64"
          - "windows/arm"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: "1.21.6"
      - name: Get OS and arch info
        run: |
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          BINARY_NAME=${{github.repository}}-$GOOS-$GOARCH
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
      - name: Build
        run: |
          go build -o "$BINARY_NAME" -v
      - name: Release Notes
        run: git log $(git describe HEAD~ --tags --abbrev=0)..HEAD --pretty='format:* %h %s%n  * %an <%ae>' --no-merges >> ".github/RELEASE-TEMPLATE.md"
      - name: Release with Notes
        uses: softprops/action-gh-release@v1
        with:
          body_path: ".github/RELEASE-TEMPLATE.md"
          draft: true
          files: ${{env.BINARY_NAME}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
